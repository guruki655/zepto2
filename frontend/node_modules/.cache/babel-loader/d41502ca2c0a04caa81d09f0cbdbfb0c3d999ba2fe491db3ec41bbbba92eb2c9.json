{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITD\\\\zepto2\\\\zepto2\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nconst express = require('express');\nconst router = express.Router();\nconst User = require('../models/userModel');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\n\n// Login Route\nrouter.post('/login', async (req, res) => {\n  try {\n    const {\n      email,\n      password\n    } = req.body;\n\n    // Check if the user exists\n    const user = await User.findOne({\n      email\n    });\n    if (!user) {\n      return res.status(400).json({\n        message: 'User not found'\n      });\n    }\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return res.status(400).json({\n        message: 'Invalid credentials'\n      });\n    }\n\n    // Generate JWT token (sign the token)\n    const token = jwt.sign({\n      userId: user._id,\n      role: user.role\n    },\n    // Payload: Store user ID and role\n    'gkr103055',\n    // Secret key to sign the token (use environment variables in production)\n    {\n      expiresIn: '1h'\n    } // Token expiration time\n    );\n\n    // Respond with token and user role\n    res.json({\n      token,\n      role: user.role,\n      userId: user._id // Send the userId as well for further reference if needed\n    });\n  } catch (err) {\n    res.status(500).json({\n      message: err.message\n    });\n  }\n});\nrouter.get('/users', async (req, res) => {\n  try {\n    const users = await User.find(); // Fetch all users\n    res.json(users);\n  } catch (err) {\n    res.status(500).json({\n      message: err.message\n    });\n  }\n});\nrouter.post('/register', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      password,\n      role\n    } = req.body;\n\n    // Check if email already exists\n    const existingUser = await User.findOne({\n      email\n    });\n    if (existingUser) return res.status(400).json({\n      message: 'User already exists'\n    });\n\n    // Hash the password\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(password, salt);\n    let vendorId = null;\n    let customerId = null;\n\n    // If the role is 'vendor', assign vendorId\n    if (role === 'vendor') {\n      vendorId = await User.getNextId('vendor');\n    }\n\n    // If the role is 'customer', assign customerId\n    if (role === 'customer') {\n      customerId = await User.getNextId('customer');\n    }\n\n    // Create user\n    const newUser = new User({\n      name,\n      email,\n      password: hashedPassword,\n      role,\n      vendorId,\n      customerId\n    });\n    await newUser.save();\n    res.status(201).json({\n      message: 'User created successfully'\n    });\n  } catch (err) {\n    res.status(500).json({\n      message: err.message\n    });\n  }\n});\nmodule.exports = router;\nconst mongoose = require('mongoose');\nconst userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true\n  },\n  password: {\n    type: String,\n    required: true\n  },\n  role: {\n    type: String,\n    enum: ['admin', 'vendor', 'customer'],\n    required: true\n  },\n  vendorId: {\n    type: Number,\n    default: null\n  },\n  customerId: {\n    type: Number,\n    default: null\n  }\n});\nuserSchema.statics.getNextId = async function (role) {\n  // We find the highest id for the given role (vendor/customer)\n  const latestUser = await this.findOne({\n    role\n  }).sort({\n    [role === 'vendor' ? 'vendorId' : 'customerId']: -1\n  });\n\n  // Return the next ID based on the highest found, otherwise return 1\n  return latestUser ? latestUser[role === 'vendor' ? 'vendorId' : 'customerId'] + 1 : 1;\n};\nmodule.exports = mongoose.model('User', userSchema);\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateForm = () => {\n    const {\n      name,\n      email,\n      password,\n      role\n    } = formData;\n    if (name.trim().length < 3) {\n      alert('Name should be at least 3 characters long.');\n      return false;\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.(com|in|net|org)$/;\n    if (!emailRegex.test(email)) {\n      alert('Please enter a valid email.');\n      return false;\n    }\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$/;\n    if (!passwordRegex.test(password)) {\n      alert('Password must be at least 6 characters long and contain at least one letter and one number.');\n      return false;\n    }\n    if (role === '') {\n      alert('Please select a role.');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    try {\n      await axios.post('http://localhost:5000/api/auth/register', formData);\n      alert('Registered successfully!');\n      navigate('/login');\n    } catch (err) {\n      console.error('Register error:', err);\n      alert('Registration failed. Try again!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container d-flex justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-4 shadow register-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            className: \"form-control\",\n            placeholder: \"Name\",\n            value: formData.name,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            className: \"form-control\",\n            placeholder: \"Email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            className: \"form-control\",\n            placeholder: \"Password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            className: \"form-select\",\n            value: formData.role,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"vendor\",\n              children: \"Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"customer\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"RjgHENN5Rosvr5woPhkMWzNfj1Q=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["express","require","router","Router","User","jwt","bcrypt","post","req","res","email","password","body","user","findOne","status","json","message","isMatch","compare","token","sign","userId","_id","role","expiresIn","err","get","users","find","name","existingUser","salt","genSalt","hashedPassword","hash","vendorId","customerId","getNextId","newUser","save","module","exports","mongoose","userSchema","Schema","type","String","required","unique","enum","Number","default","statics","latestUser","sort","model","React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","navigate","handleChange","e","target","value","validateForm","trim","length","alert","emailRegex","test","passwordRegex","handleSubmit","preventDefault","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/ITD/zepto2/zepto2/src/components/Register.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst User = require('../models/userModel');\r\nconst jwt = require('jsonwebtoken');\r\nconst bcrypt = require('bcryptjs');\r\n\r\n\r\n\r\n// Login Route\r\nrouter.post('/login', async (req, res) => {\r\n    try {\r\n        const { email, password } = req.body;\r\n\r\n        // Check if the user exists\r\n        const user = await User.findOne({ email });\r\n        if (!user) {\r\n            return res.status(400).json({ message: 'User not found' });\r\n        }\r\n\r\n        \r\n        const isMatch = await bcrypt.compare(password, user.password);\r\n        if (!isMatch) {\r\n            return res.status(400).json({ message: 'Invalid credentials' });\r\n        }\r\n\r\n        // Generate JWT token (sign the token)\r\n        const token = jwt.sign(\r\n            { userId: user._id, role: user.role }, // Payload: Store user ID and role\r\n            'gkr103055',  // Secret key to sign the token (use environment variables in production)\r\n            { expiresIn: '1h' }  // Token expiration time\r\n        );\r\n\r\n        // Respond with token and user role\r\n        res.json({\r\n            token,\r\n            role: user.role,\r\n            userId: user._id  // Send the userId as well for further reference if needed\r\n        });\r\n    } catch (err) {\r\n        res.status(500).json({ message: err.message });\r\n    }\r\n});\r\nrouter.get('/users', async (req, res) => {\r\n    try {\r\n        const users = await User.find();  // Fetch all users\r\n        res.json(users);\r\n    } catch (err) {\r\n        res.status(500).json({ message: err.message });\r\n    }\r\n});\r\n\r\n\r\n\r\nrouter.post('/register', async (req, res) => {\r\n    try {\r\n        const { name, email, password, role } = req.body;\r\n\r\n        // Check if email already exists\r\n        const existingUser = await User.findOne({ email });\r\n        if (existingUser) return res.status(400).json({ message: 'User already exists' });\r\n\r\n        // Hash the password\r\n        const salt = await bcrypt.genSalt(10);\r\n        const hashedPassword = await bcrypt.hash(password, salt);\r\n\r\n        let vendorId = null;\r\n        let customerId = null;\r\n\r\n        // If the role is 'vendor', assign vendorId\r\n        if (role === 'vendor') {\r\n            vendorId = await User.getNextId('vendor');\r\n        }\r\n\r\n        // If the role is 'customer', assign customerId\r\n        if (role === 'customer') {\r\n            customerId = await User.getNextId('customer');\r\n        }\r\n\r\n        // Create user\r\n        const newUser = new User({\r\n            name,\r\n            email,\r\n            password: hashedPassword,\r\n            role,\r\n            vendorId,\r\n            customerId\r\n        });\r\n\r\n        await newUser.save();\r\n\r\n        res.status(201).json({ message: 'User created successfully' });\r\n    } catch (err) {\r\n        res.status(500).json({ message: err.message });\r\n    }\r\n});\r\n\r\nmodule.exports = router;\r\n\r\nconst mongoose = require('mongoose');\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    name: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    password: { type: String, required: true },\r\n    role: { \r\n        type: String, \r\n        enum: ['admin', 'vendor', 'customer'], \r\n        required: true \r\n    },\r\n    vendorId: { type: Number, default: null },\r\n    customerId: { type: Number, default: null },\r\n});\r\n\r\nuserSchema.statics.getNextId = async function(role) {\r\n    // We find the highest id for the given role (vendor/customer)\r\n    const latestUser = await this.findOne({ role }).sort({ [role === 'vendor' ? 'vendorId' : 'customerId']: -1 });\r\n\r\n    // Return the next ID based on the highest found, otherwise return 1\r\n    return latestUser ? latestUser[role === 'vendor' ? 'vendorId' : 'customerId'] + 1 : 1;\r\n};\r\n\r\nmodule.exports = mongoose.model('User', userSchema);\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Register() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    role: '',  \r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, email, password, role } = formData;\r\n\r\n    if (name.trim().length < 3) {\r\n      alert('Name should be at least 3 characters long.');\r\n      return false;\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.(com|in|net|org)$/;\r\n    if (!emailRegex.test(email)) {\r\n      alert('Please enter a valid email.');\r\n      return false;\r\n    }\r\n\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d@$!%*?&]{6,}$/;\r\n    if (!passwordRegex.test(password)) {\r\n      alert('Password must be at least 6 characters long and contain at least one letter and one number.');\r\n      return false;\r\n    }\r\n\r\n    if (role === '') {\r\n      alert('Please select a role.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/auth/register', formData);\r\n      alert('Registered successfully!');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      console.error('Register error:', err);\r\n      alert('Registration failed. Try again!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container d-flex justify-content-center align-items-center\">\r\n      <div className=\"card p-4 shadow register-card\">\r\n        <h2 className=\"text-center mb-4\">Register</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <input \r\n              name=\"name\" \r\n              className=\"form-control\" \r\n              placeholder=\"Name\" \r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <input \r\n              type=\"email\" \r\n              name=\"email\" \r\n              className=\"form-control\" \r\n              placeholder=\"Email\" \r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <input \r\n              type=\"password\" \r\n              name=\"password\" \r\n              className=\"form-control\" \r\n              placeholder=\"Password\" \r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <select \r\n              name=\"role\" \r\n              className=\"form-select\"\r\n              value={formData.role}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select Role</option>\r\n              <option value=\"admin\">Admin</option>\r\n              <option value=\"vendor\">Vendor</option>\r\n              <option value=\"customer\">Customer</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"d-grid\">\r\n            <button type=\"submit\" className=\"btn btn-success\">Register</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}