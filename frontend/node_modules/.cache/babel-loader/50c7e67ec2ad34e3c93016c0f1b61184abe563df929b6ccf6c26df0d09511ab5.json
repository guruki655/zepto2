{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITD\\\\zepto2\\\\zepto2\\\\src\\\\contexts\\\\cartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const addToCart = product => {\n    if (!isLoggedIn) {\n      alert('Please log in to add items to the cart.');\n      return; // Exit early if not logged in\n    } else {\n      setCartItems(prevItems => {\n        const existingItem = prevItems.find(item => item.ProductID === product.ProductID);\n        const availableStock = parseInt(product.ProductQuantity);\n        if (existingItem) {\n          if (existingItem.quantity >= availableStock) {\n            alert(`Only ${availableStock} in stock.`);\n            return prevItems;\n          }\n          return prevItems.map(item => item.ProductID === product.ProductID ? {\n            ...item,\n            quantity: item.quantity + 1\n          } : item);\n        } else {\n          return [...prevItems, {\n            ...product,\n            quantity: 1\n          }];\n        }\n      });\n    }\n    ;\n    const removeFromCart = productId => {\n      setCartItems(prevItems => {\n        const existingItem = prevItems.find(item => item.ProductID === productId);\n        if (existingItem.quantity === 1) {\n          return prevItems.filter(item => item.ProductID !== productId);\n        }\n        return prevItems.map(item => item.ProductID === productId ? {\n          ...item,\n          quantity: item.quantity - 1\n        } : item);\n      });\n    };\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const cartTotal = cartItems.reduce((total, item) => total + parseFloat(item.ProductPrice) * item.quantity, 0);\n  const cartCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      clearCart,\n      cartTotal,\n      cartCount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"a7J9OfCnQNwJX3sHCHmJJkr2lWw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","isLoggedIn","setIsLoggedIn","addToCart","product","alert","prevItems","existingItem","find","item","ProductID","availableStock","parseInt","ProductQuantity","quantity","map","removeFromCart","productId","filter","clearCart","cartTotal","reduce","total","parseFloat","ProductPrice","cartCount","count","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["D:/ITD/zepto2/zepto2/src/contexts/cartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const addToCart = (product) => {\r\n    if (!isLoggedIn) {\r\n        alert('Please log in to add items to the cart.');\r\n        return; // Exit early if not logged in\r\n      }\r\n      else{\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find(item => item.ProductID === product.ProductID);\r\n      const availableStock = parseInt(product.ProductQuantity); \r\n  \r\n      if (existingItem) {\r\n        if (existingItem.quantity >= availableStock) {\r\n          alert(`Only ${availableStock} in stock.`);\r\n          return prevItems;\r\n        }\r\n  \r\n        return prevItems.map(item =>\r\n          item.ProductID === product.ProductID\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevItems, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n  const removeFromCart = (productId) => {\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find(item => item.ProductID === productId);\r\n      \r\n      if (existingItem.quantity === 1) {\r\n        return prevItems.filter(item => item.ProductID !== productId);\r\n      }\r\n      \r\n      return prevItems.map(item =>\r\n        item.ProductID === productId\r\n          ? { ...item, quantity: item.quantity - 1 }\r\n          : item\r\n      );\r\n    });\r\n}\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCartItems([]);\r\n  };\r\n\r\n  const cartTotal = cartItems.reduce(\r\n    (total, item) => total + (parseFloat(item.ProductPrice) * item.quantity),\r\n    0\r\n  );\r\n\r\n  const cartCount = cartItems.reduce(\r\n    (count, item) => count + item.quantity,\r\n    0\r\n  );\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartItems,\r\n        addToCart,\r\n        removeFromCart,\r\n        clearCart,\r\n        cartTotal,\r\n        cartCount\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  return useContext(CartContext);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}