{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITD\\\\zepto2\\\\zepto2\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getAuth, signInWithPhoneNumber, RecaptchaVerifier } from \"firebase/auth\";\nimport axios from 'axios';\nimport { auth } from \"../firebase\"; // Import initialized auth from firebase.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [confirmationResult, setConfirmationResult] = useState(null);\n  const [firebaseToken, setFirebaseToken] = useState(\"\");\n\n  // Initialize reCAPTCHA verifier\n  useEffect(() => {\n    window.recaptchaVerifier = new RecaptchaVerifier(\"recaptcha-container\", {\n      size: \"invisible\",\n      callback: response => {\n        console.log(\"reCAPTCHA solved\", response);\n      }\n    }, auth);\n  }, []);\n\n  // Send OTP to the user's phone number\n  const sendOtp = () => {\n    const phoneNumberWithCountryCode = \"+91\" + phoneNumber; // Adjust country code as needed\n    const appVerifier = window.recaptchaVerifier;\n    signInWithPhoneNumber(auth, phoneNumberWithCountryCode, appVerifier).then(confirmationResult => {\n      setConfirmationResult(confirmationResult);\n      alert(\"OTP sent!\");\n    }).catch(error => {\n      console.error(\"Error during OTP sending: \", error);\n      alert(\"Error sending OTP.\");\n    });\n  };\n\n  // Verify the OTP\n  const verifyOtp = () => {\n    if (confirmationResult) {\n      confirmationResult.confirm(otp).then(result => {\n        console.log(\"User signed in:\", result.user);\n        setFirebaseToken(result.user.accessToken); // Use accessToken instead of uid\n        alert(\"OTP Verified! Proceed to registration.\");\n      }).catch(error => {\n        console.error(\"Error during OTP verification: \", error);\n        alert(\"Invalid OTP.\");\n      });\n    } else {\n      alert(\"OTP has not been sent yet.\");\n    }\n  };\n\n  // Handle the registration process\n  const handleRegister = async e => {\n    e.preventDefault();\n    if (!firebaseToken) {\n      alert(\"Please verify your phone number with OTP first.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        name,\n        email,\n        password,\n        role,\n        firebaseToken\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Registration error: \", error);\n      alert(\"Error during registration.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        className: \"w-full p-2 mb-2 border rounded\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter phone number\",\n          value: phoneNumber,\n          onChange: e => setPhoneNumber(e.target.value),\n          className: \"w-full p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: sendOtp,\n          className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          className: \"w-full p-2 border rounded\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: verifyOtp,\n          className: \"ml-2 p-2 bg-blue-500 text-white rounded\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        className: \"w-full p-2 bg-green-500 text-white rounded\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recaptcha-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"fSWifla24vTm1H4ONz9rQFBKI5Y=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","getAuth","signInWithPhoneNumber","RecaptchaVerifier","axios","auth","jsxDEV","_jsxDEV","Register","_s","name","setName","email","setEmail","password","setPassword","role","setRole","phoneNumber","setPhoneNumber","otp","setOtp","confirmationResult","setConfirmationResult","firebaseToken","setFirebaseToken","window","recaptchaVerifier","size","callback","response","console","log","sendOtp","phoneNumberWithCountryCode","appVerifier","then","alert","catch","error","verifyOtp","confirm","result","user","accessToken","handleRegister","e","preventDefault","post","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","id","_c","$RefreshReg$"],"sources":["D:/ITD/zepto2/zepto2/src/components/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getAuth, signInWithPhoneNumber, RecaptchaVerifier } from \"firebase/auth\";\r\nimport axios from 'axios';\r\nimport { auth } from \"../firebase\"; // Import initialized auth from firebase.js\r\n\r\nfunction Register() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [confirmationResult, setConfirmationResult] = useState(null);\r\n  const [firebaseToken, setFirebaseToken] = useState(\"\");\r\n\r\n  // Initialize reCAPTCHA verifier\r\n  useEffect(() => {\r\n    window.recaptchaVerifier = new RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: (response) => {\r\n          console.log(\"reCAPTCHA solved\", response);\r\n        },\r\n      },\r\n      auth\r\n    );\r\n  }, []);\r\n\r\n  // Send OTP to the user's phone number\r\n  const sendOtp = () => {\r\n    const phoneNumberWithCountryCode = \"+91\" + phoneNumber; // Adjust country code as needed\r\n    const appVerifier = window.recaptchaVerifier;\r\n\r\n    signInWithPhoneNumber(auth, phoneNumberWithCountryCode, appVerifier)\r\n      .then((confirmationResult) => {\r\n        setConfirmationResult(confirmationResult);\r\n        alert(\"OTP sent!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error during OTP sending: \", error);\r\n        alert(\"Error sending OTP.\");\r\n      });\r\n  };\r\n\r\n  // Verify the OTP\r\n  const verifyOtp = () => {\r\n    if (confirmationResult) {\r\n      confirmationResult\r\n        .confirm(otp)\r\n        .then((result) => {\r\n          console.log(\"User signed in:\", result.user);\r\n          setFirebaseToken(result.user.accessToken); // Use accessToken instead of uid\r\n          alert(\"OTP Verified! Proceed to registration.\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error during OTP verification: \", error);\r\n          alert(\"Invalid OTP.\");\r\n        });\r\n    } else {\r\n      alert(\"OTP has not been sent yet.\");\r\n    }\r\n  };\r\n\r\n  // Handle the registration process\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!firebaseToken) {\r\n      alert(\"Please verify your phone number with OTP first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        name,\r\n        email,\r\n        password,\r\n        role,\r\n        firebaseToken\r\n      });\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Registration error: \", error);\r\n      alert(\"Error during registration.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Register</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        />\r\n        <select\r\n          value={role}\r\n          onChange={(e) => setRole(e.target.value)}\r\n          className=\"w-full p-2 mb-2 border rounded\"\r\n          required\r\n        >\r\n          <option value=\"\">Select Role</option>\r\n          <option value=\"user\">User</option>\r\n          <option value=\"admin\">Admin</option>\r\n        </select>\r\n        <div className=\"flex mb-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)}\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={sendOtp}\r\n            className=\"ml-2 p-2 bg-blue-500 text-white rounded\"\r\n          >\r\n            Send OTP\r\n          </button>\r\n        </div>\r\n        <div className=\"flex mb-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            onClick={verifyOtp}\r\n            className=\"ml-2 p-2 bg-blue-500 text-white rounded\"\r\n          >\r\n            Verify OTP\r\n          </button>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleRegister}\r\n          className=\"w-full p-2 bg-green-500 text-white rounded\"\r\n        >\r\n          Register\r\n        </button>\r\n      </div>\r\n      <div id=\"recaptcha-container\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}