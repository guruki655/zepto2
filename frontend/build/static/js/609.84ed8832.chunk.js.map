{"version":3,"file":"static/js/609.84ed8832.chunk.js","mappings":"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","sources":["pages/forgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ForgotPassword() {\r\n  const [step, setStep] = useState(1); // 1: Enter email, 2: Verify OTP, 3: Reset password\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    otp: '',\r\n    newPassword: '',\r\n  });\r\n  const [resetToken, setResetToken] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateEmail = () => {\r\n    if (!formData.email) {\r\n      setErrors({ email: 'Email is required' });\r\n      return false;\r\n    }\r\n    setErrors({});\r\n    return true;\r\n  };\r\n\r\n  const handleSendOTP = async () => {\r\n    if (!validateEmail()) return;\r\n\r\n    try {\r\n      console.log('Sending OTP to:', `${process.env.REACT_APP_API_BASE_URL}/api/auth/forgot-password`); // Debug log\r\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/auth/forgot-password`, {\r\n        email: formData.email,\r\n      });\r\n      alert(response.data.message);\r\n      setStep(2); // Move to OTP verification step\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Failed to send OTP');\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    if (!formData.otp) {\r\n      setErrors({ otp: 'OTP is required' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Verifying OTP at:', `${process.env.REACT_APP_API_BASE_URL}/api/auth/verify-otp-reset`); // Debug log\r\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/auth/verify-otp-reset`, {\r\n        email: formData.email,\r\n        otp: formData.otp,\r\n      });\r\n      if (response.data.success) {\r\n        setResetToken(response.data.resetToken);\r\n        setStep(3); // Move to reset password step\r\n        alert(response.data.message);\r\n      }\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Error verifying OTP');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!formData.newPassword) {\r\n      setErrors({ newPassword: 'New password is required' });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      console.log('Resetting password at:', `${process.env.REACT_APP_API_BASE_URL}/api/auth/reset-password`); // Debug log\r\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/auth/reset-password`, {\r\n        resetToken,\r\n        newPassword: formData.newPassword,\r\n      });\r\n      alert(response.data.message);\r\n      navigate('/login'); // Redirect to login after success\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Error resetting password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-container d-flex justify-content-center align-items-center\">\r\n      <div className=\"card p-4 shadow forgot-password-card\">\r\n        <h2 className=\"text-center mb-4\">Forgot Password</h2>\r\n\r\n        {step === 1 && (\r\n          <div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              {errors.email && <small className=\"text-danger\">{errors.email}</small>}\r\n            </div>\r\n            <button className=\"btn btn-primary w-100\" onClick={handleSendOTP}>\r\n              Send OTP\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {step === 2 && (\r\n          <div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"otp\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter OTP\"\r\n                value={formData.otp}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              {errors.otp && <small className=\"text-danger\">{errors.otp}</small>}\r\n            </div>\r\n            <button className=\"btn btn-success w-100\" onClick={handleVerifyOTP}>\r\n              Verify OTP\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {step === 3 && (\r\n          <div>\r\n            <div className=\"mb-3\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter new password\"\r\n                value={formData.newPassword}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              {errors.newPassword && <small className=\"text-danger\">{errors.newPassword}</small>}\r\n            </div>\r\n            <button className=\"btn btn-success w-100\" onClick={handleResetPassword}>\r\n              Reset Password\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;"],"names":["step","setStep","useState","formData","setFormData","email","otp","newPassword","resetToken","setResetToken","errors","setErrors","navigate","useNavigate","handleChange","e","target","name","value","_jsx","className","children","_jsxs","type","placeholder","onChange","required","onClick","async","console","log","response","axios","post","alert","data","message","err","_err$response","_err$response$data","success","_err$response2","_err$response2$data","_err$response3","_err$response3$data"],"sourceRoot":""}