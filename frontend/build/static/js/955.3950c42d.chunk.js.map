{"version":3,"file":"static/js/955.3950c42d.chunk.js","mappings":"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","sources":["components/vendorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nfunction VendorDashboard() {\r\n    const [products, setProducts] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const [showProducts, setShowProducts] = useState(false); // State to toggle products table\r\n    const [showOrders, setShowOrders] = useState(false); // State to toggle orders table\r\n    const [formData, setFormData] = useState({\r\n        ProductID: '',\r\n        ProductName: '',\r\n        ProductDescription: '',\r\n        ProductLocation: '',\r\n        ProductPrice: '',\r\n        ProductQuantity: '',\r\n        ProductType: '',\r\n        ProductSubType: '',\r\n        ProductWeight: '',\r\n        ProductShelf: '',\r\n        ProductBrand: '',\r\n        ProductMaterial: '',\r\n        ProductImage: null,\r\n        ProductRating: 1\r\n    });\r\n    const [editId, setEditId] = useState(null);\r\n    const [errors, setErrors] = useState({ ProductPrice: '', ProductRating: '' });\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        fetchOrders();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            console.log('Fetching products from:', `${process.env.REACT_APP_API_BASE_URL}/api/customers`); // Debug log\r\n            const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/customers`);\r\n            setProducts(res.data);\r\n        } catch (error) {\r\n            console.error('Error fetching products:', error);\r\n        }\r\n    };\r\n\r\n    const fetchOrders = async () => {\r\n        try {\r\n            console.log('Fetching orders from:', `${process.env.REACT_APP_API_BASE_URL}/api/customers/orders/all`); // Debug log\r\n            const res = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/customers/orders/all`);\r\n            setOrders(res.data);\r\n        } catch (error) {\r\n            console.error('Error fetching orders:', error);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, files } = e.target;\r\n        if (name === 'ProductImage') {\r\n            setFormData({ ...formData, ProductImage: files[0] });\r\n        } else {\r\n            setFormData({ ...formData, [name]: value });\r\n        }\r\n        setErrors({ ...errors, [name]: '' });\r\n    };\r\n\r\n    const validateForm = () => {\r\n        let isValid = true;\r\n        const newErrors = { ProductPrice: '', ProductRating: '' };\r\n\r\n        const price = parseFloat(formData.ProductPrice);\r\n        if (isNaN(price) || price <= 0) {\r\n            newErrors.ProductPrice = 'Price must be greater than 0';\r\n            isValid = false;\r\n        }\r\n\r\n        const rating = parseInt(formData.ProductRating);\r\n        if (isNaN(rating) || rating < 1 || rating > 5) {\r\n            newErrors.ProductRating = 'Rating must be between 1 and 5';\r\n            isValid = false;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const form = new FormData();\r\n            for (let key in formData) {\r\n                form.append(key, formData[key]);\r\n            }\r\n\r\n            if (editId) {\r\n                console.log('Updating product at:', `${process.env.REACT_APP_API_BASE_URL}/api/customers/${editId}`); // Debug log\r\n                await axios.put(`${process.env.REACT_APP_API_BASE_URL}/api/customers/${editId}`, form, {\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                });\r\n                setEditId(null);\r\n            } else {\r\n                console.log('Adding product at:', `${process.env.REACT_APP_API_BASE_URL}/api/customers`); // Debug log\r\n                await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/customers`, form, {\r\n                    headers: { 'Content-Type': 'multipart/form-data' }\r\n                });\r\n            }\r\n\r\n            setFormData({\r\n                ProductID: '',\r\n                ProductName: '',\r\n                ProductDescription: '',\r\n                ProductLocation: '',\r\n                ProductPrice: '',\r\n                ProductQuantity: '',\r\n                ProductType: '',\r\n                ProductSubType: '',\r\n                ProductWeight: '',\r\n                ProductShelf: '',\r\n                ProductBrand: '',\r\n                ProductMaterial: '',\r\n                ProductImage: null,\r\n                ProductRating: 1\r\n            });\r\n            setErrors({ ProductPrice: '', ProductRating: '' });\r\n            fetchProducts();\r\n            setShowProducts(!showProducts); // Toggle products table\r\n            setShowOrders(false); // Hide orders table\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            console.log('Deleting product at:', `${process.env.REACT_APP_API_BASE_URL}/api/customers/${id}`); // Debug log\r\n            await axios.delete(`${process.env.REACT_APP_API_BASE_URL}/api/customers/${id}`);\r\n            fetchProducts();\r\n        } catch (error) {\r\n            console.error('Error deleting product:', error);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (product) => {\r\n        setFormData({\r\n            ...product,\r\n            ProductImage: null\r\n        });\r\n        setEditId(product._id);\r\n        setErrors({ ProductPrice: '', ProductRating: '' });\r\n    };\r\n\r\n    const toggleOrderHistory = () => {\r\n        setShowOrders(!showOrders); // Toggle orders table\r\n        setShowProducts(false); // Hide products table\r\n    };\r\n\r\n    const toggleProducts = () => {\r\n        setShowProducts(!showProducts); // Toggle products table\r\n        setShowOrders(false); // Hide orders table\r\n    };\r\n\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <h2 className=\"mb-4\">Vendor Dashboard</h2>\r\n\r\n            <div className=\"card mb-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductID\"\r\n                                placeholder=\"Product ID\"\r\n                                value={formData.ProductID}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductName\"\r\n                                placeholder=\"Product Name\"\r\n                                value={formData.ProductName}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductDescription\"\r\n                                placeholder=\"Description\"\r\n                                value={formData.ProductDescription}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductLocation\"\r\n                                placeholder=\"Location\"\r\n                                value={formData.ProductLocation}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductPrice\"\r\n                                placeholder=\"Price\"\r\n                                type=\"number\"\r\n                                min=\"0.01\"\r\n                                step=\"0.01\"\r\n                                value={formData.ProductPrice}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.ProductPrice && (\r\n                                <small className=\"text-danger\">{errors.ProductPrice}</small>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductQuantity\"\r\n                                placeholder=\"Quantity\"\r\n                                type=\"number\"\r\n                                value={formData.ProductQuantity}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <select\r\n                                className=\"form-select\"\r\n                                name=\"ProductType\"\r\n                                value={formData.ProductType}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <option value=\"\">Select Type</option>\r\n                                <option value=\"Cafe\">Cafe</option>\r\n                                <option value=\"Toys\">Toys</option>\r\n                                <option value=\"FruitsandVegetables\">Fruits and Vegetables</option>\r\n                                <option value=\"Electronics\">Electronics</option>\r\n                                <option value=\"Mobile\">Mobile</option>\r\n                                <option value=\"Makeup\">Makeup</option>\r\n                                <option value=\"Jewellery\">Jewellery</option>\r\n                                <option value=\"FrozenFood\">FrozenFood</option>\r\n                                <option value=\"IceCream\">IceCream</option>\r\n                                <option value=\"PackagedFood\">PackagedFood</option>\r\n                                <option value=\"Skincare\">Skincare</option>\r\n                                <option value=\"HairCare\">HairCare</option>\r\n                                <option value=\"Baby\">Baby</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductSubType\"\r\n                                placeholder=\"SubType\"\r\n                                value={formData.ProductSubType}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductWeight\"\r\n                                placeholder=\"Weight\"\r\n                                value={formData.ProductWeight}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductShelf\"\r\n                                placeholder=\"Shelf\"\r\n                                value={formData.ProductShelf}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductBrand\"\r\n                                placeholder=\"Brand\"\r\n                                value={formData.ProductBrand}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductMaterial\"\r\n                                placeholder=\"Material\"\r\n                                value={formData.ProductMaterial}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                type=\"file\"\r\n                                name=\"ProductImage\"\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"ProductRating\"\r\n                                placeholder=\"Rating (1-5)\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                max=\"5\"\r\n                                step=\"1\"\r\n                                value={formData.ProductRating}\r\n                                onChange={handleChange}\r\n                            />\r\n                            {errors.ProductRating && (\r\n                                <small className=\"text-danger\">{errors.ProductRating}</small>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <button\r\n                                className=\"btn btn-primary me-2\"\r\n                                onClick={handleSubmit}\r\n                            >\r\n                                {editId ? 'Update' : 'Add'} Product\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary me-2\"\r\n                                onClick={toggleOrderHistory}\r\n                            >\r\n                                {showOrders ? 'Hide' : 'See'} Order History\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                onClick={toggleProducts}\r\n                            >\r\n                                {showProducts ? 'Hide' : 'Show'} Products\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {showProducts && (\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table table-bordered table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sl No</th>\r\n                                <th>Product ID</th>\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n                                <th>Location</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                                <th>Type</th>\r\n                                <th>SubType</th>\r\n                                <th>Weight</th>\r\n                                <th>Shelf</th>\r\n                                <th>Brand</th>\r\n                                <th>Material</th>\r\n                                <th>Image</th>\r\n                                <th>Rating</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product, index) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{product.ProductID}</td>\r\n                                    <td>{product.ProductName}</td>\r\n                                    <td>{product.ProductDescription}</td>\r\n                                    <td>{product.ProductLocation}</td>\r\n                                    <td>{product.ProductPrice}</td>\r\n                                    <td>{product.ProductQuantity}</td>\r\n                                    <td>{product.ProductType}</td>\r\n                                    <td>{product.ProductSubType}</td>\r\n                                    <td>{product.ProductWeight}</td>\r\n                                    <td>{product.ProductShelf}</td>\r\n                                    <td>{product.ProductBrand}</td>\r\n                                    <td>{product.ProductMaterial}</td>\r\n                                    <td>\r\n                                        {product.ProductImage && (\r\n                                            <img\r\n                                                src={`data:image/jpeg;base64,${product.ProductImage}`}\r\n                                                alt=\"Product\"\r\n                                                style={{ width: '100px', height: '100px', objectFit: 'cover' }}\r\n                                            />\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {Array.from({ length: Math.floor(product.ProductRating) }, (_, i) => (\r\n                                            <i key={i} className=\"fas fa-star text-warning\" />\r\n                                        ))}\r\n                                        {Array.from({ length: 5 - Math.floor(product.ProductRating) }, (_, i) => (\r\n                                            <i key={i + Math.floor(product.ProductRating)} className=\"far fa-star text-warning\" />\r\n                                        ))}\r\n                                    </td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-warning me-2\"\r\n                                            onClick={() => handleEdit(product)}\r\n                                        >\r\n                                            Update\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-danger\"\r\n                                            onClick={() => handleDelete(product._id)}\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n\r\n            {showOrders && (\r\n                <>\r\n                    <h3>All Customer Orders</h3>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered table-striped\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sl No</th>\r\n                                    <th>Order ID</th>\r\n                                    <th>Customer Email</th>\r\n                                    <th>Customer Name</th>\r\n                                    <th>Total Amount</th>\r\n                                    <th>Items</th>\r\n                                    <th>Address</th>\r\n                                    <th>Payment Status</th>\r\n                                    <th>Order Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map((order, index) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{index + 1}</td>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user?.email || 'N/A'}</td>\r\n                                        <td>{order.user?.name || 'N/A'}</td>\r\n                                        <td>₹{order.total.toFixed(2)}</td>\r\n                                        <td>\r\n                                            {order.items.map((item, idx) => (\r\n                                                <div key={idx}>\r\n                                                    {item.ProductName} (Qty: {item.ProductQuantity}, Price: ₹{item.ProductPrice})\r\n                                                </div>\r\n                                            ))}\r\n                                        </td>\r\n                                        <td>\r\n                                            {order.address?.addressLine1\r\n                                                ? `${order.address.houseNo}, ${order.address.addressLine1}, ${order.address.building}`\r\n                                                : 'N/A'}\r\n                                        </td>\r\n                                        <td>{order.paymentStatus}</td>\r\n                                        <td>{new Date(order.createdAt).toLocaleString()}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VendorDashboard;"],"names":["products","setProducts","useState","orders","setOrders","showProducts","setShowProducts","showOrders","setShowOrders","formData","setFormData","ProductID","ProductName","ProductDescription","ProductLocation","ProductPrice","ProductQuantity","ProductType","ProductSubType","ProductWeight","ProductShelf","ProductBrand","ProductMaterial","ProductImage","ProductRating","editId","setEditId","errors","setErrors","useEffect","fetchProducts","fetchOrders","async","console","log","res","axios","get","data","error","handleChange","e","name","value","files","target","_jsxs","className","children","_jsx","placeholder","onChange","type","min","step","max","onClick","validateForm","isValid","newErrors","price","parseFloat","isNaN","rating","parseInt","form","FormData","key","append","put","headers","post","toggleOrderHistory","toggleProducts","map","product","index","src","alt","style","width","height","objectFit","Array","from","length","Math","floor","_","i","_id","handleEdit","id","delete","handleDelete","_Fragment","order","_order$user","_order$user2","_order$address","user","email","total","toFixed","items","item","idx","address","addressLine1","houseNo","building","paymentStatus","Date","createdAt","toLocaleString"],"sourceRoot":""}