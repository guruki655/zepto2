{"version":3,"file":"static/js/837.b15c19c8.chunk.js","mappings":"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","sources":["pages/cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useCart } from '../contexts/cartContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Cart() {\r\n  const {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    clearCart,\r\n    cartTotal,\r\n    cartCount,\r\n  } = useCart();\r\n\r\n  const navigate = useNavigate();\r\n  const [showAddressModal, setShowAddressModal] = useState(false);\r\n  const [useSavedAddress, setUseSavedAddress] = useState(true);\r\n  const [savedAddress, setSavedAddress] = useState(null);\r\n  const [newAddress, setNewAddress] = useState({\r\n    addressLine1: '',\r\n    houseNo: '',\r\n    building: '',\r\n    landmark: '',\r\n    label: 'Home',\r\n    zipCode: '',\r\n  });\r\n  const [couponCode, setCouponCode] = useState('');\r\n  const [appliedCoupon, setAppliedCoupon] = useState(null);\r\n  const [couponError, setCouponError] = useState('');\r\n  const [addressError, setAddressError] = useState('');\r\n\r\n  // Available coupons\r\n  const availableCoupons = [\r\n    {\r\n      code: 'NEW100',\r\n      discount: 100,\r\n      minPurchase: 150,\r\n      description: 'Get ₹100 off on orders above ₹150',\r\n    },\r\n  ];\r\n\r\n  // Bangalore ZIP codes\r\n  const bangaloreZipCodes = [\r\n    '560001', '560002', '560003', '560004', '560005', '560006', '560007', '560008', '560009', '560010',\r\n    '560011', '560012', '560013', '560014', '560015', '560016', '560017', '560018', '560019', '560020',\r\n    '560021', '560022', '560023', '560024', '560025', '560026', '560027', '560028', '560029', '560030',\r\n    '560031', '560032', '560033', '560034', '560035', '560036', '560037', '560038', '560039', '560040',\r\n    '560041', '560042', '560043', '560044', '560045', '560046', '560047', '560048', '560049', '560050',\r\n    '560051', '560052', '560053', '560054', '560055', '560056', '560057', '560058', '560059', '560060',\r\n    '560061', '560062', '560063', '560064', '560065', '560066', '560067', '560068', '560069', '560070',\r\n    '560071', '560072', '560073', '560074', '560075', '560076', '560077', '560078', '560079', '560080',\r\n    '560081', '560082', '560083', '560084', '560085', '560086', '560087', '560088', '560089', '560090',\r\n    '560091', '560092', '560093', '560094', '560095', '560096', '560097', '560098', '560099', '560100',\r\n  ];\r\n\r\n  // Calculate discounts\r\n  const baseDiscount = cartTotal * 0.1; // Existing 10% discount\r\n  const couponDiscount = appliedCoupon ? appliedCoupon.discount : 0;\r\n  const totalAfterDiscount = cartTotal - baseDiscount - couponDiscount;\r\n\r\n  // Fetch saved address\r\n  useEffect(() => {\r\n    const fetchSavedAddress = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) return;\r\n\r\n        console.log('Fetching saved address from:', `${process.env.REACT_APP_API_BASE_URL}/api/customers/users/address`); // Debug log\r\n        const response = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/customers/users/address`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        console.log('Fetched saved address:', response.data);\r\n        if (response.data.address) {\r\n          setSavedAddress(response.data.address);\r\n          localStorage.setItem('userAddress', JSON.stringify(response.data.address));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching saved address:', err);\r\n        try {\r\n          const localAddress = JSON.parse(localStorage.getItem('userAddress'));\r\n          if (localAddress && localAddress.addressLine1) {\r\n            setSavedAddress(localAddress);\r\n          }\r\n        } catch (parseErr) {\r\n          console.error('Error parsing userAddress:', parseErr);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchSavedAddress();\r\n  }, []);\r\n\r\n  const handleAddressChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewAddress((prev) => ({ ...prev, [name]: value }));\r\n    setAddressError('');\r\n  };\r\n\r\n  const handleApplyCoupon = () => {\r\n    setCouponError('');\r\n    \r\n    if (!couponCode) {\r\n      setCouponError('Please enter a coupon code');\r\n      return;\r\n    }\r\n\r\n    const coupon = availableCoupons.find((c) => c.code === couponCode.toUpperCase());\r\n    \r\n    if (!coupon) {\r\n      setCouponError('Invalid coupon code');\r\n      return;\r\n    }\r\n\r\n    if (cartTotal < coupon.minPurchase) {\r\n      setCouponError(`Minimum purchase of ₹${coupon.minPurchase} required for this coupon`);\r\n      return;\r\n    }\r\n\r\n    setAppliedCoupon(coupon);\r\n  };\r\n\r\n  const handleRemoveCoupon = () => {\r\n    setAppliedCoupon(null);\r\n    setCouponCode('');\r\n    setCouponError('');\r\n  };\r\n\r\n  const isValidBangaloreAddress = (address) => {\r\n    if (!bangaloreZipCodes.includes(address.zipCode)) {\r\n      return false;\r\n    }\r\n    return true; // Rely on ZIP code\r\n  };\r\n\r\n  const saveAddressAndProceed = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('Please log in to proceed.');\r\n        navigate('/Login');\r\n        return;\r\n      }\r\n  \r\n      let addressToUse = useSavedAddress && savedAddress ? savedAddress : newAddress;\r\n  \r\n      if (!useSavedAddress) {\r\n        if (!newAddress.addressLine1 || !newAddress.houseNo || !newAddress.building || !newAddress.zipCode) {\r\n          setAddressError('Please fill in all required address fields, including ZIP code.');\r\n          return;\r\n        }\r\n  \r\n        if (!isValidBangaloreAddress(newAddress)) {\r\n          setAddressError('This address is not serviceable. Please use a valid Bangalore ZIP code (e.g., 560001).');\r\n          return;\r\n        }\r\n  \r\n        console.log('Saving new address to:', `${process.env.REACT_APP_API_BASE_URL}/api/customers/users/update-address`); // Debug log\r\n        const response = await axios.put(\r\n          `${process.env.REACT_APP_API_BASE_URL}/api/customers/users/update-address`,\r\n          { address: newAddress },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        console.log('Saved new address:', response.data);\r\n        setSavedAddress(newAddress);\r\n        localStorage.setItem('userAddress', JSON.stringify(newAddress));\r\n        addressToUse = newAddress;\r\n      } else if (!savedAddress) {\r\n        setAddressError('No saved address found. Please add a new address.');\r\n        return;\r\n      } else if (!isValidBangaloreAddress(savedAddress)) {\r\n        setAddressError('Saved address is not serviceable. Please add a Bangalore address with a valid ZIP code.');\r\n        return;\r\n      }\r\n  \r\n      localStorage.setItem('userAddress', JSON.stringify(addressToUse));\r\n      setShowAddressModal(false);\r\n      // Pass discounted total to PaymentComponent\r\n      navigate('/payment', { state: { totalAfterDiscount } });\r\n    } catch (err) {\r\n      console.error('Error saving address:', err);\r\n      setAddressError(err.response?.data?.message || 'Failed to save address.');\r\n    }\r\n  };\r\n\r\n  const handleProceedToCheckout = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      alert('Please log in to proceed.');\r\n      navigate('/Login');\r\n      return;\r\n    }\r\n  \r\n    setShowAddressModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>Your Cart ({cartCount} items)</h2>\r\n\r\n      {cartItems.length === 0 ? (\r\n        <div className=\"alert alert-info\">\r\n          Your cart is empty.{' '}\r\n          <button className=\"btn btn-link\" onClick={() => navigate('/')}>\r\n            Continue shopping\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-8\">\r\n              {cartItems.map((item) => (\r\n                <div key={item.ProductID} className=\"card mb-3\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4\">\r\n                      <img\r\n                        src={`data:image/png;base64,${item.ProductImage}`}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt={item.ProductName}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.ProductName}</h5>\r\n                        <p className=\"card-text\">₹{item.ProductPrice}</p>\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <button\r\n                            className=\"btn btn-sm btn-outline-secondary\"\r\n                            onClick={() => removeFromCart(item.ProductID)}\r\n                          >\r\n                            -\r\n                          </button>\r\n                          <span className=\"mx-2\">{item.quantity}</span>\r\n                          <button\r\n                            className=\"btn btn-sm btn-outline-secondary\"\r\n                            onClick={() => addToCart(item)}\r\n                          >\r\n                            +\r\n                          </button>\r\n                          <span className=\"ms-auto fw-bold\">\r\n                            ₹{(item.quantity * parseFloat(item.ProductPrice)).toFixed(2)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"col-lg-4\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Order Summary</h5>\r\n                  <div className=\"d-flex justify-content-between mb-2\">\r\n                    <span>Subtotal ({cartCount} items)</span>\r\n                    <span>₹{cartTotal.toFixed(2)}</span>\r\n                  </div>\r\n                  <div className=\"d-flex justify-content-between mb-2 text-success\">\r\n                    <span>Discount (10%)</span>\r\n                    <span>-₹{baseDiscount.toFixed(2)}</span>\r\n                  </div>\r\n                  \r\n                  {/* Coupon Section */}\r\n                  <div className=\"mt-3 mb-3\">\r\n                    <div className=\"input-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Coupon code\"\r\n                        value={couponCode}\r\n                        onChange={(e) => setCouponCode(e.target.value)}\r\n                        disabled={appliedCoupon}\r\n                      />\r\n                      {appliedCoupon ? (\r\n                        <button\r\n                          className=\"btn btn-outline-danger\"\r\n                          type=\"button\"\r\n                          onClick={handleRemoveCoupon}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      ) : (\r\n                        <button\r\n                          className=\"btn btn-outline-primary\"\r\n                          type=\"button\"\r\n                          onClick={handleApplyCoupon}\r\n                        >\r\n                          Apply\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    {couponError && <div className=\"text-danger small mt-1\">{couponError}</div>}\r\n                    {appliedCoupon && (\r\n                      <div className=\"text-success small mt-1\">\r\n                        Coupon applied: {appliedCoupon.code} (-₹{appliedCoupon.discount})\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {appliedCoupon && (\r\n                    <div className=\"d-flex justify-content-between mb-2 text-success\">\r\n                      <span>Coupon Discount ({appliedCoupon.code})</span>\r\n                      <span>-₹{couponDiscount.toFixed(2)}</span>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <hr />\r\n                  <div className=\"d-flex justify-content-between fw-bold\">\r\n                    <span>Total</span>\r\n                    <span>₹{totalAfterDiscount.toFixed(2)}</span>\r\n                  </div>\r\n                  <button\r\n                    className=\"btn btn-primary w-100 mt-3\"\r\n                    onClick={handleProceedToCheckout}\r\n                  >\r\n                    Proceed to Checkout\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-outline-danger w-100 mt-2\"\r\n                    onClick={clearCart}\r\n                  >\r\n                    Clear Cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Address Modal */}\r\n          {showAddressModal && (\r\n            <div\r\n              className=\"modal fade show d-block\"\r\n              tabIndex=\"-1\"\r\n              style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}\r\n            >\r\n              <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">Delivery Address</h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-close\"\r\n                      onClick={() => setShowAddressModal(false)}\r\n                    ></button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {addressError && (\r\n                      <div className=\"alert alert-danger\">{addressError}</div>\r\n                    )}\r\n                    {savedAddress ? (\r\n                      <>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Saved Address</label>\r\n                          <p>\r\n                            {savedAddress.label}: {savedAddress.addressLine1},{' '}\r\n                            {savedAddress.houseNo}, {savedAddress.building}\r\n                            {savedAddress.landmark ? `, ${savedAddress.landmark}` : ''}\r\n                            {savedAddress.zipCode ? `, ${savedAddress.zipCode}` : ''}\r\n                          </p>\r\n                          <div>\r\n                            <button\r\n                              className=\"btn btn-sm btn-primary me-2\"\r\n                              onClick={() => setUseSavedAddress(true)}\r\n                              disabled={useSavedAddress}\r\n                            >\r\n                              Use This Address\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-sm btn-outline-primary\"\r\n                              onClick={() => setUseSavedAddress(false)}\r\n                            >\r\n                              Add New Address\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {!useSavedAddress && (\r\n                          <div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">Address Line 1 *</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"addressLine1\"\r\n                                value={newAddress.addressLine1}\r\n                                onChange={handleAddressChange}\r\n                                placeholder=\"Street address\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">House No. & Floor *</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"houseNo\"\r\n                                value={newAddress.houseNo}\r\n                                onChange={handleAddressChange}\r\n                                placeholder=\"Enter house no. and floor\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">Building & Block No. *</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"building\"\r\n                                value={newAddress.building}\r\n                                onChange={handleAddressChange}\r\n                                placeholder=\"Enter building and block no.\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">ZIP Code *</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"zipCode\"\r\n                                value={newAddress.zipCode}\r\n                                onChange={handleAddressChange}\r\n                                placeholder=\"Enter Bangalore ZIP code (e.g., 560001)\"\r\n                                required\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">Landmark & Area Name (Optional)</label>\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"landmark\"\r\n                                value={newAddress.landmark}\r\n                                onChange={handleAddressChange}\r\n                                placeholder=\"Enter landmark and area name\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                              <label className=\"form-label\">Add Address Label</label>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                name=\"label\"\r\n                                value={newAddress.label}\r\n                                onChange={handleAddressChange}\r\n                              >\r\n                                <option value=\"Home\">Home</option>\r\n                                <option value=\"Work\">Work</option>\r\n                                <option value=\"Other\">Other</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Address Line 1 *</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"addressLine1\"\r\n                            value={newAddress.addressLine1}\r\n                            onChange={handleAddressChange}\r\n                            placeholder=\"Street address\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">House No. & Floor *</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"houseNo\"\r\n                            value={newAddress.houseNo}\r\n                            onChange={handleAddressChange}\r\n                            placeholder=\"Enter house no. and floor\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Building & Block No. *</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"building\"\r\n                            value={newAddress.building}\r\n                            onChange={handleAddressChange}\r\n                            placeholder=\"Enter building and block no.\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">ZIP Code *</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"zipCode\"\r\n                            value={newAddress.zipCode}\r\n                            onChange={handleAddressChange}\r\n                            placeholder=\"Enter Bangalore ZIP code (e.g., 560001)\"\r\n                            required\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Landmark & Area Name (Optional)</label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"landmark\"\r\n                            value={newAddress.landmark}\r\n                            onChange={handleAddressChange}\r\n                            placeholder=\"Enter landmark and area name\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <label className=\"form-label\">Add Address Label</label>\r\n                          <select\r\n                            className=\"form-select\"\r\n                            name=\"label\"\r\n                            value={newAddress.label}\r\n                            onChange={handleAddressChange}\r\n                          >\r\n                            <option value=\"Home\">Home</option>\r\n                            <option value=\"Work\">Work</option>\r\n                            <option value=\"Other\">Other</option>\r\n                          </select>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-primary w-100\"\r\n                      onClick={saveAddressAndProceed}\r\n                    >\r\n                      {savedAddress && useSavedAddress ? 'Continue with Saved Address' : 'Save & Continue'}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;"],"names":["cartItems","addToCart","removeFromCart","clearCart","cartTotal","cartCount","useCart","navigate","useNavigate","showAddressModal","setShowAddressModal","useState","useSavedAddress","setUseSavedAddress","savedAddress","setSavedAddress","newAddress","setNewAddress","addressLine1","houseNo","building","landmark","label","zipCode","couponCode","setCouponCode","appliedCoupon","setAppliedCoupon","couponError","setCouponError","addressError","setAddressError","availableCoupons","code","discount","minPurchase","description","bangaloreZipCodes","baseDiscount","couponDiscount","totalAfterDiscount","useEffect","async","token","localStorage","getItem","console","log","response","axios","get","headers","Authorization","data","address","setItem","JSON","stringify","err","error","localAddress","parse","parseErr","fetchSavedAddress","handleAddressChange","e","name","value","target","prev","isValidBangaloreAddress","includes","_jsxs","className","children","length","_jsx","onClick","_Fragment","map","item","src","ProductImage","alt","ProductName","ProductPrice","ProductID","quantity","parseFloat","toFixed","type","placeholder","onChange","disabled","handleRemoveCoupon","handleApplyCoupon","coupon","find","c","toUpperCase","handleProceedToCheckout","alert","tabIndex","style","backgroundColor","required","addressToUse","put","state","_err$response","_err$response$data","message"],"sourceRoot":""}