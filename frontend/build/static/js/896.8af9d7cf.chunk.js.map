{"version":3,"file":"static/js/896.8af9d7cf.chunk.js","mappings":"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","sources":["components/adminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminDashboard() {\r\n  const [vendors, setVendors] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [showOrders, setShowOrders] = useState(false); // State to toggle orders table\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    vendorId: '',\r\n    address: '',\r\n    licenseNumber: '',\r\n  });\r\n  const [editId, setEditId] = useState(null);\r\n  const [editType, setEditType] = useState(null); // 'user' or 'vendor'\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchVendors();\r\n    fetchOrders(); // Fetch orders on component mount\r\n  }, []);\r\n\r\n  const fetchVendors = async () => {\r\n    try {\r\n      // Fetch User vendors (role: 'vendor')\r\n      const userRes = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/auth/users`);\r\n      const userVendors = userRes.data\r\n        .filter(user => user.role === 'vendor')\r\n        .map(user => ({ ...user, source: 'user' }));\r\n\r\n      // Fetch Vendor collection vendors\r\n      const vendorRes = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/vendors`);\r\n      const vendorCollection = vendorRes.data.map(vendor => ({ ...vendor, source: 'vendor' }));\r\n\r\n      // Combine and sort by name\r\n      const combinedVendors = [...userVendors, ...vendorCollection].sort((a, b) =>\r\n        a.name.localeCompare(b.name)\r\n      );\r\n      setVendors(combinedVendors);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error fetching vendors:', error);\r\n      setError(error.response?.data?.message || 'Failed to fetch vendors');\r\n    }\r\n  };\r\n\r\n  const fetchOrders = async () => {\r\n    try {\r\n      const orderRes = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/customers/orders/all`);\r\n      setOrders(orderRes.data);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error fetching orders:', error);\r\n      setError(error.response?.data?.message || 'Failed to fetch orders');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (editType === 'user') {\r\n      // Update licenseNumber for User vendor\r\n      if (!formData.licenseNumber) {\r\n        setError('License number is required');\r\n        return;\r\n      }\r\n      try {\r\n        console.log('Updating user with data:', formData, 'and editId:', editId);\r\n        const updateResponse = await axios.put(\r\n          `${process.env.REACT_APP_API_BASE_URL}/api/auth/users/${editId}`,\r\n          { licenseNumber: formData.licenseNumber }\r\n        );\r\n        console.log('User updated:', updateResponse.data);\r\n        alert('Vendor license number updated successfully!');\r\n        setFormData({ name: '', vendorId: '', address: '', licenseNumber: '' });\r\n        setEditId(null);\r\n        setEditType(null);\r\n        setError('');\r\n        fetchVendors();\r\n      } catch (error) {\r\n        console.error('Error updating user:', error);\r\n        setError(error.response?.data?.message || 'Failed to update vendor');\r\n      }\r\n    } else {\r\n      // Add or update Vendor collection\r\n      if (!formData.name || !formData.vendorId || !formData.address || !formData.licenseNumber) {\r\n        setError('Please fill all fields');\r\n        return;\r\n      }\r\n      try {\r\n        console.log('Submitting vendor with data:', formData, 'and editId:', editId);\r\n        if (editId) {\r\n          const updateResponse = await axios.put(\r\n            `${process.env.REACT_APP_API_BASE_URL}/api/vendors/${editId}`,\r\n            formData\r\n          );\r\n          console.log('Vendor updated:', updateResponse.data);\r\n          alert('Vendor updated successfully!');\r\n        } else {\r\n          const createResponse = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/vendors`, formData);\r\n          console.log('Vendor created:', createResponse.data);\r\n          alert('Vendor added successfully!');\r\n        }\r\n        setFormData({ name: '', vendorId: '', address: '', licenseNumber: '' });\r\n        setEditId(null);\r\n        setEditType(null);\r\n        setError('');\r\n        fetchVendors();\r\n      } catch (error) {\r\n        console.error('Error submitting vendor:', error);\r\n        setError(error.response?.data?.message || 'Failed to save vendor');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id, source) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this vendor?');\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      if (source === 'user') {\r\n        // Optionally, restrict deletion of User vendors\r\n        setError('Cannot delete registered vendors');\r\n        return;\r\n      }\r\n      await axios.delete(`${process.env.REACT_APP_API_BASE_URL}/api/vendors/${id}`);\r\n      alert('Vendor deleted successfully!');\r\n      setError('');\r\n      fetchVendors();\r\n    } catch (error) {\r\n      console.error('Error deleting vendor:', error);\r\n      setError(error.response?.data?.message || 'Failed to delete vendor');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (vendor) => {\r\n    setFormData({\r\n      name: vendor.name || '',\r\n      vendorId: vendor.vendorId || '',\r\n      address: vendor.address?.addressLine1 || vendor.address || '',\r\n      licenseNumber: vendor.licenseNumber || '',\r\n    });\r\n    setEditId(vendor._id);\r\n    setEditType(vendor.source);\r\n    setError('');\r\n  };\r\n\r\n  const toggleOrders = () => {\r\n    setShowOrders(!showOrders);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>Admin Dashboard</h2>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n      {/* Vendor Form */}\r\n      <div className=\"mb-4\">\r\n        <input\r\n          name=\"name\"\r\n          placeholder=\"Vendor Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          className=\"form-control mb-2\"\r\n          disabled={editType === 'user'}\r\n        />\r\n        <input\r\n          name=\"vendorId\"\r\n          placeholder=\"Vendor ID\"\r\n          value={formData.vendorId}\r\n          onChange={handleChange}\r\n          className=\"form-control mb-2\"\r\n          disabled={editType === 'user'}\r\n        />\r\n        <input\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n          className=\"form-control mb-2\"\r\n          disabled={editType === 'user'}\r\n        />\r\n        <input\r\n          name=\"licenseNumber\"\r\n          placeholder=\"License Number\"\r\n          value={formData.licenseNumber}\r\n          onChange={handleChange}\r\n          className=\"form-control mb-2\"\r\n        />\r\n        <button onClick={handleSubmit} className=\"btn btn-primary\">\r\n          {editType === 'user' ? 'Update License Number' : editId ? 'Update Vendor' : 'Add Vendor'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Vendors Table */}\r\n      <h3>Vendors</h3>\r\n      <div className=\"table-responsive mb-5\">\r\n        <table className=\"table table-bordered table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Sl No</th>\r\n              <th>Name</th>\r\n              <th>Role/Source</th>\r\n              <th>Vendor ID</th>\r\n              <th>Email</th>\r\n              <th>Address</th>\r\n              <th>License Number</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {vendors.map((vendor, index) => (\r\n              <tr key={`${vendor._id}-${vendor.source}`}>\r\n                <td>{index + 1}</td>\r\n                <td>{vendor.name}</td>\r\n                <td>{vendor.source === 'user' ? vendor.role : 'Vendor'}</td>\r\n                <td>{vendor.vendorId || 'N/A'}</td>\r\n                <td>{vendor.email || 'N/A'}</td>\r\n                <td>\r\n                  {vendor.source === 'user'\r\n                    ? vendor.address?.addressLine1 || 'N/A'\r\n                    : vendor.address || 'N/A'}\r\n                </td>\r\n                <td>{vendor.licenseNumber || 'N/A'}</td>\r\n                <td>\r\n                  <button\r\n                    onClick={() => handleEdit(vendor)}\r\n                    className=\"btn btn-sm btn-warning me-2\"\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  {vendor.source === 'vendor' && (\r\n                    <button\r\n                      onClick={() => handleDelete(vendor._id, vendor.source)}\r\n                      className=\"btn btn-sm btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* Show All Order History Button */}\r\n      <button\r\n        onClick={toggleOrders}\r\n        className=\"btn btn-primary mb-3\"\r\n      >\r\n        {showOrders ? 'Hide Order History' : 'Show All Order History'}\r\n      </button>\r\n\r\n      {/* Orders Table (Conditionally Rendered) */}\r\n      {showOrders && (\r\n        <>\r\n          <h3>All Customer Orders</h3>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"table table-bordered table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl No</th>\r\n                  <th>Order ID</th>\r\n                  <th>Customer Email</th>\r\n                  <th>Customer Name</th>\r\n                  <th>Total Amount</th>\r\n                  <th>Items</th>\r\n                  <th>Address</th>\r\n                  <th>Payment Status</th>\r\n                  <th>Order Date</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order, index) => (\r\n                  <tr key={order._id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.user?.email || 'N/A'}</td>\r\n                    <td>{order.user?.name || 'N/A'}</td>\r\n                    <td>₹{order.total.toFixed(2)}</td>\r\n                    <td>\r\n                      {order.items.map((item, idx) => (\r\n                        <div key={idx}>\r\n                          {item.ProductName} (Qty: {item.ProductQuantity}, Price: ₹{item.ProductPrice})\r\n                        </div>\r\n                      ))}\r\n                    </td>\r\n                    <td>\r\n                      {order.address?.addressLine1\r\n                        ? `${order.address.houseNo}, ${order.address.addressLine1}, ${order.address.building}`\r\n                        : 'N/A'}\r\n                    </td>\r\n                    <td>{order.paymentStatus}</td>\r\n                    <td>{new Date(order.createdAt).toLocaleString()}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;"],"names":["vendors","setVendors","useState","orders","setOrders","showOrders","setShowOrders","formData","setFormData","name","vendorId","address","licenseNumber","editId","setEditId","editType","setEditType","error","setError","useEffect","fetchVendors","fetchOrders","async","userVendors","axios","get","data","filter","user","role","map","source","vendorCollection","vendor","combinedVendors","sort","a","b","localeCompare","_error$response","_error$response$data","console","response","message","orderRes","_error$response2","_error$response2$data","handleChange","e","target","value","_jsxs","className","children","_jsx","placeholder","onChange","disabled","onClick","log","updateResponse","put","alert","_error$response3","_error$response3$data","createResponse","post","_error$response4","_error$response4$data","index","_vendor$address2","email","addressLine1","_vendor$address","_id","handleEdit","id","window","confirm","delete","_error$response5","_error$response5$data","handleDelete","toggleOrders","_Fragment","order","_order$user","_order$user2","_order$address","total","toFixed","items","item","idx","ProductName","ProductQuantity","ProductPrice","houseNo","building","paymentStatus","Date","createdAt","toLocaleString"],"sourceRoot":""}